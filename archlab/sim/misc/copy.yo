0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp
0x00a: 804800000000000000   | 	call main
0x013: 00                   | 	halt
                            | 
0x018:                      | 	.align8
0x018: 0a00000000000000     | src:	.quad 0x00a
0x020: b000000000000000     | 	.quad 0x0b0
0x028: 000c000000000000     | 	.quad 0xc00
                            | 
0x030: 1101000000000000     | dest:	.quad 0x111
0x038: 2202000000000000     | 	.quad 0x222
0x040: 3303000000000000     | 	.quad 0x333
                            | 
0x048: 30f61800000000000000 | main:	irmovq src, %rsi
0x052: 30f73000000000000000 | 	irmovq dest, %rdi
0x05c: 30f10300000000000000 | 	irmovq $0x3, %rcx
0x066: 30f80800000000000000 | 	irmovq $0x8, %r8
0x070: 807a00000000000000   | 	call copy
0x079: 90                   | 	ret
                            | 	
0x07a: 6300                 | copy:	xorq %rax, %rax
0x07c: 6211                 | loop:	andq %rcx, %rcx
0x07e: 73b600000000000000   | 	je end
0x087: 50960000000000000000 | 	mrmovq (%rsi), %r9
0x091: 6086                 | 	addq %r8, %rsi
0x093: 40970000000000000000 | 	rmmovq %r9, (%rdi)
0x09d: 6087                 | 	addq %r8, %rdi
0x09f: 6390                 | 	xorq %r9, %rax
0x0a1: 30f3ffffffffffffffff | 	irmovq $-1, %rbx
0x0ab: 6031                 | 	addq %rbx, %rcx
0x0ad: 707c00000000000000   | 	jmp loop
0x0b6: 90                   | end:	ret
                            | 
0x200:                      | 	.pos 0x200
0x200:                      | stack:
